/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * This is test data, not real source code!
 * StmtCfgTest builds and tests the CFG for the first block/method in this class.
 */
import javax.annotation.Nullable;

/**
 * More complex conditional null guards.
 */
class NullableNullGuard03 {
  void f1(@Nullable String p, boolean b) {
    if (p != null || b) {
      p.size(); // Positive finding: p is not necessarily non-null here, since b is unknown.
    }
  }

  void f2(@Nullable String p, boolean b) {
    if (b || p != null) {
      p.size(); // Positive finding.
    }
  }

  void f3(@Nullable String p, boolean b) {
    if (p == null && b) {
    } else {
      p.size(); // Positive finding.
    }
  }

  void f4(@Nullable String p, boolean b) {
    if (b && p == null) {
    } else {
      p.size(); // Positive finding.
    }
  }

  void f5(@Nullable String p, boolean b) {
    if (p == null || b) {
    } else {
      p.size(); // Negative finding.
    }
  }

  void f6(@Nullable String p, boolean b) {
    if (b || p == null) {
    } else {
      p.size(); // Negative finding.
    }
  }
}
