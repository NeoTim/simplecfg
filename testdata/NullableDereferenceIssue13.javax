/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import javax.annotation.Nullable;

/**
 * This is test data, not real source code!
 * Test for GitHub issue #13 (https://github.com/google/simplecfg/issues/13).
 */
public class NullableDereferenceIssue13 {
  protected final Object obj;

  public NullableDereferenceIssue13(@Nullable Object obj) {
    this.obj = obj;

    // Calling test() is equivalent to checking obj != null,
    // however, the current NullableDereference implementation
    // can not handle this case, even though test() is declared
    // inside the same class.
    if (test()) {
      obj.hashCode(); // False positive finding generated here.
    }
  }

  private boolean test() {
    return obj != null;
  }
}
